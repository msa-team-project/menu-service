plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.4'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'jacoco' // ✅ JaCoCo 플러그인 적용
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('springCloudVersion', "2024.0.1")
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.mysql:mysql-connector-j'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'software.amazon.awssdk:s3:2.20.120'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}



jacoco {
    toolVersion = "0.8.10" // 최신 버전 사용
}

test {
    useJUnitPlatform() // JUnit 5 사용 시 필요
    finalizedBy jacocoTestReport // 테스트가 끝난 후 JaCoCo 실행
}

jacocoTestReport {
    dependsOn test // 테스트 후 실행
    reports {
        html.required = true  // HTML 리포트 생성
        xml.required = true   // XML 리포트 생성 (CI/CD에서 사용 가능)
        csv.required = false  // CSV 리포트는 비활성화
    }
}
